// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class MeshInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MeshInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMeshInfo(bb:flatbuffers.ByteBuffer, obj?:MeshInfo):MeshInfo {
  return (obj || new MeshInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMeshInfo(bb:flatbuffers.ByteBuffer, obj?:MeshInfo):MeshInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MeshInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

objectName():string|null
objectName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
objectName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

faceIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startMeshInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addObjectName(builder:flatbuffers.Builder, objectNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, objectNameOffset, 0);
}

static addFaceIndex(builder:flatbuffers.Builder, faceIndex:number) {
  builder.addFieldInt32(1, faceIndex, 0);
}

static endMeshInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMeshInfo(builder:flatbuffers.Builder, objectNameOffset:flatbuffers.Offset, faceIndex:number):flatbuffers.Offset {
  MeshInfo.startMeshInfo(builder);
  MeshInfo.addObjectName(builder, objectNameOffset);
  MeshInfo.addFaceIndex(builder, faceIndex);
  return MeshInfo.endMeshInfo(builder);
}
}
