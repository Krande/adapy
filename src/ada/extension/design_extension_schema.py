# generated by datamodel-codegen:
#   filename:  design_extension.schema.json
#   timestamp: 2025-06-27T19:02:43+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class DesignNodeReference(BaseModel):
    faces: Optional[List[str]] = Field(None, description="node reference of Faces mesh")


class Group(BaseModel):
    name: Optional[str] = Field(None, description="Name of group")
    members: Optional[List[str]] = Field(None, description="Name of group objects")
    description: Optional[str] = Field(None, description="Description of Group")
    parent_name: Optional[str] = Field(None, description="Name of the parent design object")


class DesignDataExtension(BaseModel):
    name: str = Field(..., description="Name of the design object")
    description: Optional[str] = Field(None, description="Optional description of the design object")
    groups: Optional[List[Group]] = Field(None, description="Named groups and their member objects")
    node_references: Optional[DesignNodeReference] = Field(None, description="References to GLTF node names")
