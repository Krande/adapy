# automatically generated by the FlatBuffers compiler, do not modify

# namespace: wsock

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class WebClient(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WebClient()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWebClient(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # WebClient
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WebClient
    def InstanceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # WebClient
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebClient
    def Address(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebClient
    def Port(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0


def WebClientStart(builder):
    builder.StartObject(4)


def Start(builder):
    WebClientStart(builder)


def WebClientAddInstanceId(builder, instanceId):
    builder.PrependInt32Slot(0, instanceId, 0)


def AddInstanceId(builder, instanceId):
    WebClientAddInstanceId(builder, instanceId)


def WebClientAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)


def AddName(builder, name):
    WebClientAddName(builder, name)


def WebClientAddAddress(builder, address):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(address), 0)


def AddAddress(builder, address):
    WebClientAddAddress(builder, address)


def WebClientAddPort(builder, port):
    builder.PrependInt32Slot(3, port, 0)


def AddPort(builder, port):
    WebClientAddPort(builder, port)


def WebClientEnd(builder):
    return builder.EndObject()


def End(builder):
    return WebClientEnd(builder)
