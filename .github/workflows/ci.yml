name: ci-ada-main

# bump 2
on:
  push:
    paths:
      - src/**
      - tests/**
      - images/tests/**
      - conda/**
      - .github/workflows/ci.yml
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ci-ada-main-${{ github.ref }}
  cancel-in-progress: true

jobs:
  activate:
    if: |
      github.repository == 'krande/adapy' &&
      !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ok go!
          echo head commit message: "${{ github.event.head_commit.message }}"
          echo event name: "${{ github.event_name }}" 
          echo base_ref: "${{ github.base_ref }}" 
          echo ref: "${{ github.ref }}" 
          echo sha "${{ github.sha }}"
          echo PR head sha: "${{ github.event.pull_request.head.sha }}"
          echo PR head ref "${{ github.event.pull_request.head.ref }}"
  lint:
    needs: activate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: actions/checkout@v3
      - name: Install lint packages
        run: pip install isort ruff black
      - name: Lint with black
        run: black --config pyproject.toml --check .
      - name: Lint with isort
        run: isort --check .
      - name: Lint with ruff
        run: ruff .

  test:
    needs: activate
    name: ${{ matrix.platform.name }}-${{ matrix.pyver.name }}-${{ matrix.build.name }}
    runs-on: ${{ matrix.platform.distver }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        build: [ { name: 'core' },{ name: 'full' } ]
        pyver: [
          { name: py310, distver: '3.10' },
          { name: py311, distver: '3.11' }
        ]
        platform: [
          { name: Windows, distver: windows-latest, short: 'win-64' },
          { name: Linux, distver: ubuntu-latest, short: 'linux-64' },
          { name: macOS, distver: macos-latest, short: 'osx-64' }
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/provision-with-micromamba@main # https://github.com/mamba-org/provision-with-micromamba
        if: ${{ matrix.build.name == 'core' }}
        with:
          cache-env: true
          channels: conda-forge,krande
          channel-priority: strict
          environment-file: conda/environment.core.yml
          extra-specs: |
            python=${{ matrix.pyver.distver }}
            pytest

      - uses: mamba-org/provision-with-micromamba@main # https://github.com/mamba-org/provision-with-micromamba
        if: ${{ matrix.build.name == 'full' }}
        with:
          cache-env: true
          channels: conda-forge,krande
          channel-priority: strict
          environment-file: conda/environment.core.yml
          extra-specs: |
            python=${{ matrix.pyver.distver }}
            pytest
            jupyterlab
            pythreejs
            pyparsing

      - name: pip install
        run: |
          pip install -e .

      - name: Test Core
        if: ${{ matrix.build.name == 'core' }}
        run: pytest ./tests --ignore=./tests/docker/ --ignore=./tests/full/
      - name: Test Full
        if: ${{ matrix.build.name == 'full' }}
        run: pytest ./tests --ignore=./tests/docker/


  pypi:
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
    needs: test
    name: Publish to PYPI
    defaults:
      run:
        shell: bash -l {0}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Build and upload package for pypi
        shell: bash -l {0}
        run: |
          pip install build
          python -m build
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  conda:
    if: ${{ (github.event_name != 'pull_request' && github.ref == 'refs/heads/main') }}
    needs: test
    name: Publish to CONDA
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        build: [ { name: 'core' },{ name: 'full' } ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/provision-with-micromamba@main # https://github.com/mamba-org/provision-with-micromamba
        with:
          cache-env: true
          environment-name: ada
          channels: conda-forge
          channel-priority: strict
          environment-file: conda/environment.build.yml

      - name: Build & Upload to CONDA Main
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
        run: |
          conda mambabuild -c conda-forge -c krande . --variants "{'variant': '${{matrix.build.name}}'}" --user krande --token=${{ secrets.ANACONDA_TOKEN }} --no-test
        working-directory: conda
        env:
          IGNORE_TEST_FILES: true
