name: ci-ada-main

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/ci.yml'
    branches:
    - main
    - dev
  pull_request:
    branches:
    - main

jobs:
  activate:
    if: github.repository == 'krande/adapy'
    runs-on: ubuntu-latest
    steps:
      - run: echo ok go
  lint:
    needs: activate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - uses: actions/checkout@v2
    - name: Lint with isort
      run: |
        pip install isort
        isort --check .
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 .
    - name: Lint with black
      run: |
        pip install black
        black --check .
  test:
    needs: lint
    name: ${{ matrix.platform.name }}-${{ matrix.pyver.name }}
    runs-on: ${{ matrix.platform.distver }}
    strategy:
      fail-fast: false
      matrix:
        pyver: [ { name: py38, distver: '3.8.8' }]
        platform: [
          { name: Windows, distver: windows-latest },
          { name: Linux, distver: ubuntu-latest },
          { name: macOS, distver: macos-latest }
        ]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2 # https://github.com/conda-incubator/setup-miniconda
        with:
          activate-environment: "adaenv"
          environment-file: environment.yml
          python-version: ${{ matrix.pyver.distver }}
          auto-activate-base: false
      - name: Install package in env
        shell: bash -l {0}
        run: |
          pip install .
      - name: test Package
        shell: bash -l {0}
        run: |
          cd tests
          pip install pytest pytest-cov
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
  publish:
    needs: test
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build package
        run: |
          pip install build
          python -m build
      - name: Publish package
        if: github.event_name == 'push' && contains(github.event.head_commit.message, '[Release]') && github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}




