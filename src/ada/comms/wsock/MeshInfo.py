# automatically generated by the FlatBuffers compiler, do not modify

# namespace: wsock

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class MeshInfo(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MeshInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMeshInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # MeshInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MeshInfo
    def ObjectName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MeshInfo
    def FaceIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MeshInfo
    def JsonData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def MeshInfoStart(builder):
    builder.StartObject(3)


def Start(builder):
    MeshInfoStart(builder)


def MeshInfoAddObjectName(builder, objectName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(objectName), 0)


def AddObjectName(builder, objectName):
    MeshInfoAddObjectName(builder, objectName)


def MeshInfoAddFaceIndex(builder, faceIndex):
    builder.PrependInt32Slot(1, faceIndex, 0)


def AddFaceIndex(builder, faceIndex):
    MeshInfoAddFaceIndex(builder, faceIndex)


def MeshInfoAddJsonData(builder, jsonData):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(jsonData), 0)


def AddJsonData(builder, jsonData):
    MeshInfoAddJsonData(builder, jsonData)


def MeshInfoEnd(builder):
    return builder.EndObject()


def End(builder):
    return MeshInfoEnd(builder)
