[tool.python]
enabled = true
pre_release_tag = "dev"

[tool.python.pip]
enabled = true

[tool.python.conda]
enabled = true
recipe_dir = "./conda"
extra_conda_dep_channels = ["krande"]

# Anaconda Related
use_anaconda_server = true
owner = "Krande"
label = "main"
#
# info
#
# If you are uploading to public/private anaconda you need to set this
# secrets.CONDA_API_TOKEN
#
# Or if you will use a private QUETZ server you need to set these
# secrets.QUETZ_API_KEY
# secrets.QUETZ_URL

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
# info
#
# This will generate a release  for your project if added
# generate_release_auto.yaml expects to find this under github repo secrets
# secrets.SOURCE_KEY
# This key needs to be a deploy key with write privileges on this source repository where you plan to do release
# PS! do not enable Do not allow bypassing the above settings under branch protection, if you do we can not push

assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "chore",
    "feat",
    "fix"
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
upload_to_vcs_release = true
