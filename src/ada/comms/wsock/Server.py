# automatically generated by the FlatBuffers compiler, do not modify

# namespace: wsock

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class Server(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Server()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsServer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # Server
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Server
    def NewFileObject(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from ada.comms.wsock.FileObject import FileObject

            obj = FileObject()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Server
    def AllFileObjects(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from ada.comms.wsock.FileObject import FileObject

            obj = FileObject()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Server
    def AllFileObjectsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Server
    def AllFileObjectsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # Server
    def GetFileObjectByName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Server
    def GetFileObjectByPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Server
    def DeleteFileObject(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from ada.comms.wsock.FileObject import FileObject

            obj = FileObject()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Server
    def StartFileInLocalApp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from ada.comms.wsock.FileObject import FileObject

            obj = FileObject()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None


def ServerStart(builder):
    builder.StartObject(6)


def Start(builder):
    ServerStart(builder)


def ServerAddNewFileObject(builder, newFileObject):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(newFileObject), 0)


def AddNewFileObject(builder, newFileObject):
    ServerAddNewFileObject(builder, newFileObject)


def ServerAddAllFileObjects(builder, allFileObjects):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(allFileObjects), 0)


def AddAllFileObjects(builder, allFileObjects):
    ServerAddAllFileObjects(builder, allFileObjects)


def ServerStartAllFileObjectsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)


def StartAllFileObjectsVector(builder, numElems):
    return ServerStartAllFileObjectsVector(builder, numElems)


def ServerAddGetFileObjectByName(builder, getFileObjectByName):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(getFileObjectByName), 0)


def AddGetFileObjectByName(builder, getFileObjectByName):
    ServerAddGetFileObjectByName(builder, getFileObjectByName)


def ServerAddGetFileObjectByPath(builder, getFileObjectByPath):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(getFileObjectByPath), 0)


def AddGetFileObjectByPath(builder, getFileObjectByPath):
    ServerAddGetFileObjectByPath(builder, getFileObjectByPath)


def ServerAddDeleteFileObject(builder, deleteFileObject):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(deleteFileObject), 0)


def AddDeleteFileObject(builder, deleteFileObject):
    ServerAddDeleteFileObject(builder, deleteFileObject)


def ServerAddStartFileInLocalApp(builder, startFileInLocalApp):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(startFileInLocalApp), 0)


def AddStartFileInLocalApp(builder, startFileInLocalApp):
    ServerAddStartFileInLocalApp(builder, startFileInLocalApp)


def ServerEnd(builder):
    return builder.EndObject()


def End(builder):
    return ServerEnd(builder)
