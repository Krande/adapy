import datetime
import os
import sys

from sphinx.builders.html import StandaloneHTMLBuilder

StandaloneHTMLBuilder.supported_image_types = ["image/svg+xml", "image/gif", "image/png", "image/jpeg"]

sys.path.insert(0, os.path.abspath("../src"))
sys.path.insert(0, os.path.dirname(os.path.realpath(__file__)))

# -- Project information -----------------------------------------------------

project = "ada"
long_title = "Assembly for Design & Analysis"
main_url = "https://adapy.readthedocs.io/en/latest/"
this_year = datetime.datetime.now().year
author = "Kristoffer H. Andersen"
copyright = f"{this_year}, {author}"

# The short X.Y version
version = ""
# The full version, including alpha/beta/rc tags
release = os.getenv("ADAPY_VER", "0.0.1dev")

# Resolve environment variables
if os.getenv("ADADEBUG") == "true":
    os.environ["ADAWEB"] = "http://127.0.0.1:8000"
else:
    os.environ["ADAWEB"] = main_url

if os.getenv("DOCTEST") == "True":
    nbsphinx_execute = "always"
    nbsphinx_allow_errors = True
    nbsphinx_timeout = 120  # Time in seconds; use -1 for no timeout
else:
    nbsphinx_execute = "never"
    nbsphinx_allow_errors = True

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "nbsphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.extlinks",
    "IPython.sphinxext.ipython_console_highlighting",
]

autodoc_member_order = "bysource"
# Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst", ".md"]


# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["Thumbs.db", ".DS_Store", "**.ipynb_checkpoints", "_build"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# html_sourcelink_suffix = ''
# blob_url = f'https://raw.githubusercontent.com/Krande/adapy/dev/docs/notebooks/${{newpath}}.ipynb'
# blob_url = 'https://github.com/Krande/adapy/blob/dev/docs/notebooks/${{newpath}}.ipynb'
blob_url = "https://github.com/Krande/adapy/raw/dev/docs/notebooks/${newpath}.ipynb"

nbsphinx_prolog = rf"""

.. raw:: html

    <div>
      <p>Download Notebook
      </p>

      <script>
        if (document.location.host) {{
          var p = document.currentScript.previousSibling.previousSibling;
          var a = document.createElement('a');
          var raw_path = "{{{{env.docname | e}}}}";
          var newpath = raw_path.replace("notebooks/", "");

          a.innerHTML = '<em>Here</em>';
          a.href = `{blob_url}`;
          a.type="application/octet-stream";
          a.classList.add('reference');
          a.classList.add('external');
          p.appendChild(a);
          p.appendChild(document.createTextNode('.'));
        }}
      </script>
    </div>

"""

nbsphinx_epilog = f"""
----

Generated by `{author} {this_year}`_ for {main_url}.

.. _`{author} {this_year}`: https://github.com/Krande/adapy
"""

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}
html_theme_options = {"collapse_navigation": False}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

html_js_files = [
    "https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js",
]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "adadoc"

# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, "ada.tex", "ada Documentation", author, "manual"),
]

# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "ada", "ada Documentation", [author], 1)]

# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, "ada", "ada Documentation", author, "ada", "Assembly for Design & Analysis", "Miscellaneous"),
]

# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ["search.html"]

# -- Extension configuration -------------------------------------------------

extlinks = {}
